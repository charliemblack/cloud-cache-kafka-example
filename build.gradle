/*
 * Copyright  2018 Charlie Black
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 */

buildscript {
    ext {
        springBootVersion = '2.1.8.BUILD-SNAPSHOT'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'io.franzbecker.gradle-lombok' version '1.11'
}

allprojects {
    repositories {
        mavenCentral()
        jcenter()
        maven { url 'https://repo.spring.io/libs-release' }
        maven { url 'https://repo.spring.io/libs-milestone' }
        maven { url 'https://repo.spring.io/libs-snapshot' }
    }
}

subprojects {
    apply plugin: 'java'
    sourceCompatibility = 1.8

    group = 'example.cloudcache'
    version = '0.0.1-SNAPSHOT'

    configurations {
        provided
        compile.extendsFrom provided
    }


    task copyDependancies(type: Copy) {
        into "$buildDir/dependancies"
        from(configurations.compile - configurations.provided)
    }

    jar {
        dependsOn copyDependancies
    }
}

project(':data-driver') {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    dependencies {
        compile 'io.codearte.jfairy:jfairy:0.5.9'
        compileOnly 'org.projectlombok:lombok:1.18.8'
        annotationProcessor 'org.projectlombok:lombok:1.18.8'
        compile 'io.pivotal.gemfire:geode-core:9.8.3'
        compile 'org.springframework.geode:spring-gemfire-starter:1.1.0.RELEASE'
        compile "org.springframework.boot:spring-boot-starter-web:2.1.8.RELEASE"
    }
}
project(':kafka-geode-integration') {
    dependencies {
        provided 'io.pivotal.gemfire:geode-core:9.8.3'
        compile 'org.apache.kafka:kafka-clients:1.0.0'
    }
}
